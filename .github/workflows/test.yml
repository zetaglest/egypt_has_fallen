name: Validate MegaGlest mod

on:
  push:
    branches:
      - master
    tags:
      - v**
  pull_request:
    branches:
      - master

env:
  MOD_NAME: egypt_has_fallen

jobs:
  validate-and-build-mod:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/checkout@v3
      with:
        clean: 'false'
        repository: 'megaglest/megaglest-data'
        path: 'megaglest-data'
        sparse-checkout: 'techs/megapack'
    - name: Get megapack
      run: |
        mv megaglest-data/techs/megapack $GITHUB_WORKSPACE
        rm -rf $GITHUB_WORKSPACE/megaglest-data
        cd $GITHUB_WORKSPACE

    - if: ${{ github.ref_type == 'tag' }}
      run: |
        MOD_VERSION=${{ github.ref_name }}
        echo "MOD_VERSION=${MOD_VERSION:1}" >> $GITHUB_ENV

    - uses: megaglest/gh-action-validate-megaglest-mod@v1
      with:
        name: ${{ env.MOD_NAME }}
        type: scenario
        dependencies: 'megapack'

    - if: ${{ github.ref_type == 'tag' }}
      name: Make 7z and sha256sum
      run: |
        OUT_FILE="$MOD_NAME-$MOD_VERSION"
        cd output/$MOD_NAME
        sudo mv $MOD_NAME.xml "$OUT_FILE".xml
        cd ..
        sudo mv "$MOD_NAME" "$OUT_FILE"
        7z a "$OUT_FILE.7z" "$OUT_FILE"
        sudo rm -rf "$OUT_FILE"
        cd output
        sha256sum "$OUT_FILE.7z" > "$OUT_FILE.7z.sha256sum"

    - if: ${{ github.ref_type == 'tag' }}
      name: Release Mod
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: True
        prerelease: False
        artifacts: "output/${{ env.MOD_NAME }}*.*"
        token: ${{ secrets.GITHUB_TOKEN }}
        omitNameDuringUpdate: True
        omitBodyDuringUpdate: True
