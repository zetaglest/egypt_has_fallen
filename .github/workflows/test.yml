name: Validate MegaGlest mod

on:
  push:
    branches:
      - master
    tags:
      - v**
  pull_request:
    branches:
      - master

env:
  MOD_NAME: egypt_has_fallen

jobs:
  validate-and-build-mod:
    if: ${{ github.ref_type != 'tag' }}
    runs-on: ubuntu-latest
    env:
      MOD_VERSION: ${{ github.sha }}
    steps:
    - uses: actions/checkout@v3
    - name: Get megapack
      run: |
        # get only the megapack techree
        git clone -n --depth=1 --filter=tree:0 https://github.com/megaglest/megaglest-data
        cd megaglest-data
        git sparse-checkout set --no-cone techs/megapack
        git checkout
        mv techs/megapack $GITHUB_WORKSPACE
        rm -rf $GITHUB_WORKSPACE/megaglest-data
        cd $GITHUB_WORKSPACE
    - uses: megaglest/gh-action-validate-megaglest-mod@v1
      with:
        name: ${{ env.MOD_NAME }}
        type: scenario
        dependencies: 'megapack'

  release-mod:
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    env:
      MOD_VERSION: ${{ github.ref_name }}
    steps:
    - uses: actions/checkout@v3
    - name: Get megapack
      run: |
        # get only the megapack techree
        git clone -n --depth=1 --filter=tree:0 https://github.com/megaglest/megaglest-data
        cd megaglest-data
        git sparse-checkout set --no-cone techs/megapack
        git checkout
        mv techs/megapack $GITHUB_WORKSPACE
        rm -rf $GITHUB_WORKSPACE/megaglest-data
        cd $GITHUB_WORKSPACE
    - name: Massage Variables
      run: |
        echo "MOD_VERSION=${MOD_VERSION:1}" >> $GITHUB_ENV
    - uses:  megaglest/gh-action-validate-megaglest-mod@v1
      with:
        name: ${{ env.MOD_NAME }}
        release_name: ${{ env.RELEASE_NAME }}
        type: scenario
        dependencies: megapack
    - name: Make 7z
      run: |
        cd output/$MOD_NAME
        sudo mv $MOD_NAME.xml $MOD_NAME-$MOD_VERSION.xml
        cd ..
        sudo mv $MOD_NAME $MOD_NAME-$MOD_VERSION
        7z a $MOD_NAME-$MOD_VERSION.7z $MOD_NAME-$MOD_VERSION
        sudo rm -rf $MOD_NAME-$MOD_VERSION
    - name: Create sha256sum
      run:  |
        OUTPUT_FILE="$MOD_NAME-$MOD_VERSION.7z"
        cd output
        sha256sum $OUTPUT_FILE > $OUTPUT_FILE.sha256sum
    - name: Release Mod
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: True
        prerelease: False
        artifacts: "output/${{ env.RELEASE_NAME }}*.*"
        token: ${{ secrets.GITHUB_TOKEN }}
        omitNameDuringUpdate: True
        omitBodyDuringUpdate: True
