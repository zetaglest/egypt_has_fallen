<?xml version="1.0" standalone="yes" ?>
<scenario>
--Egypt has fallen
--A MegaGlest ( https://github.com/MegaGlest ) network scenario
--Stay alive long enough for your Egyptian ally to reinforce your armies!
--By Andy Alt and James Sherratt
--https://github.com/zetaglest/egypt_has_fallen
--CC-BY-SA
<difficulty value="5"/>
<players>
	<player control="network" faction="persian" team="1"/>
	<player control="human" faction="indian" team="1"/>
	<player control="cpu-mega" faction="egypt" team="1"/>
	<player control="network" faction="norsemen" team="1"/>
	<player control="cpu-mega" faction="magic" team="2"/>
	<player control="cpu-mega" faction="magic" resource_multiplier="3.0" team="2"/>
	<player control="cpu-mega" faction="magic" team="2"/>
	<player control="cpu-mega" faction="magic" resource_multiplier="3.0"team="2"/>
</players>
<map value="grandezza"/>
<tileset value="autumn"/>
<tech-tree value="megapack"/>
	<default-resources value="true"/>
	<default-units value="false"/>
	<default-victory-conditions value="false"/>
	<fog-of-war value="true"/>

	<scripts>
		<global>

			--game constants. Only change them if you change the order or factions above
			persian = 0
			indian = 1
			egypt = 2
			norsemen = 3

			--other variables. Best to leave them unchanged as well ;)
			--These are used in unitCreated and unitDied sections below
			slaveCount = 0
			pyramidCount = 0
			mageTowerCount = 0

			battlemage_loop = 0
			dragon_loop = 0
			daemon_loop = 0
			timesLooped = 0

			make_golem_count = 0
			summoner_count = 0
		</global>
		<startup>

			--Team 1 units

			--Main buildings for Team 1
			createUnit('palace', persian, startLocation(persian))
			createUnit('main_teepee', indian, startLocation(indian))
			createUnit('castle', norsemen, startLocation(norsemen))

			--create workers
			for playerNum=persian, indian do
				for i=1, 4 do
					createUnit('worker', playerNum, startLocation(playerNum))
				end
			end

			for i=1, 4 do
				createUnit('thrall', norsemen, startLocation(norsemen))
			end
			createUnit('cow', norsemen, startLocation(norsemen))

			createUnit ( 'sheep', persian, {26,210} )

			createUnit ( 'stickfighter', indian, startLocation (indian) )
			createUnit ( 'stickfighter', indian, startLocation (indian) )
			createUnit ( 'axe_thrower', indian, startLocation (indian) )
			createUnit ( 'axe_thrower', indian, startLocation (indian) )
			createUnit ( 'axe_thrower', indian, startLocation (indian) )

			createUnit ( 'fakir', persian, startLocation (persian) )
			createUnit ( 'fakir', persian, startLocation (persian) )
			createUnit ( 'princess', persian, startLocation (persian) )
			createUnit ( 'princess', persian, startLocation (persian) )
			createUnit ( 'princess', persian, startLocation (persian) )

			createUnit ( 'spearman', norsemen, startLocation (norsemen) )
			createUnit ( 'spearman', norsemen, startLocation (norsemen) )
			createUnit ( 'archer', norsemen, startLocation (norsemen) )
			createUnit ( 'archer', norsemen, startLocation (norsemen) )
			createUnit ( 'archer', norsemen, startLocation (norsemen) )

			--create AI units (Team 2, Magic)
			for playerNum=4, 7 do
				createUnit('mage_tower', playerNum, startLocation(playerNum))
				createUnit('energy_source',playerNum , startLocation(playerNum))
				createUnit('energy_source',playerNum , startLocation(playerNum))
				createUnit('battlemage', playerNum, startLocation(playerNum))
				createUnit('battlemage', playerNum, startLocation(playerNum))
				createUnit('daemon', playerNum, startLocation(playerNum))
				createUnit('daemon', playerNum, startLocation(playerNum))
				createUnit('daemon', playerNum, startLocation(playerNum))
				createUnit('golem', playerNum, startLocation(playerNum))
				createUnit('summoner_guild', playerNum, startLocation(playerNum))

				for j=1, 5 do
					createUnit('initiate', playerNum, startLocation(playerNum))
				end
			--create nearby Egypt enemies
				createUnit ( 'spearthrower', egypt, startLocation(playerNum) )
				createUnit ( 'scarab', egypt, startLocation(playerNum) )
				createUnit ( 'mummy', egypt, startLocation(playerNum) )
				createUnit ( 'mummy', egypt, startLocation(playerNum) )
			end

			--Egypt units

			createUnit( 'farm', egypt, {26,222} )
			createUnit( 'farm', egypt, {26,222} )
			createUnit( 'chicken', egypt, {26,210} )
			createUnit( 'chicken', egypt, {26,210} )
			createUnit('slave', egypt, startLocation(egypt))


			--The starting pyramid is located near the enemy's  base
			--It's needed to store resources long enough for Egypt to start
			--building a new base
			createUnit('pyramid', egypt, startLocation(5))

			togglePauseGame(1)
			showMessage ( 'Intro1', 'Introduction' )
			showMessage ( 'Intro2', 'Introduction' );
			showMessage ( 'Intro3', 'Introduction' );
			showMessage ( 'Intro4', 'Introduction' );
			showMessage ( 'Intro5', 'Introduction' );


		</startup>

		<unitCreated>
			if lastCreatedUnitName() == 'slave' then
				slaveCount = slaveCount + 1
			end

			if lastCreatedUnitName() == 'pyramid' then
				pyramidCount = pyramidCount + 1
				if pyramidCount == 1 then
					giveResource('gold', egypt, 1000)
					giveResource('stone', egypt, 1000)
					giveResource('wood', egypt, 1000)
				end
			end

			if lastCreatedUnitName() == 'mage_tower' then
				mageTowerCount = mageTowerCount + 1
			end

			if lastCreatedUnitName() == 'summoner' then
				summoner_count = summoner_count + 1
			end

			if lastCreatedUnitName() == 'daemon' and summoner_count > 0 then
				daemon_loop = daemon_loop + 1
				if daemon_loop == 5 then
					for AIplayer = 4, 7 do
						for count = 1, 3 do
							givePositionCommand( lastCreatedUnit(), 'attack', startLocation(egypt) )
							createUnit ('daemon', AIplayer, startLocation(AIplayer) )
						end
					end
					daemon_loop = 0
				end
				--givePositionCommand( lastCreatedUnit(), 'attack', startLocation(egypt) )
			end

			if lastCreatedUnitName() == 'battlemage' then
				battlemage_loop = battlemage_loop + 1
				if battlemage_loop == 5 then
					--givePositionCommand( lastCreatedUnit(), 'attack', startLocation(egypt) )

					if timesLooped > 1 then
						make_golem_count = make_golem_count + 1
						for AIplayer = 4, 7 do
							createUnit ('tower_of_souls', AIplayer, startLocation(AIplayer) )
							createUnit (make_golem_count % 5 ~= 0 and 'power_golem' or 'archmage', AIplayer, startLocation (AIplayer) )
							if dragon_loop == 14 then
								createUnit ('evil_dragon', AIplayer, startLocation (AIplayer) )
							end
						end
						dragon_loop = (dragon_loop + 1) % 15
					end

					battlemage_loop = 0
					timesLooped = timesLooped + 1
				end
			end
		</unitCreated>

		<unitDied>
			if lastDeadUnitName() == 'slave' then
				slaveCount = slaveCount - 1
			end

			killer_id = unitFaction(lastDeadUnitKiller())

			<!-- if trying to use the < sign, MegaGlest will crash, so
			assigning this here with a > sign so it can be used as a boolean value -->
			enemy_killed = killer_id > 3

			if (lastDeadUnitCauseOfDeath() == 1 and enemy_killed == false and unitFaction(lastDeadUnit()) >= 4) then
				if (killer_id ~= unitFaction(lastDeadUnit())) then
					giveResource('gold', killer_id, 50)
					giveResource('stone', killer_id, 25)
				end
			end

			if lastDeadUnitName() == 'pyramid' then
				pyramidCount = pyramidCount - 1
			end

			if ( slaveCount == 0 and pyramidCount == 0 ) then
				showMessage ('failure1', 'Failure')
				showMessage ('failure2', 'Failure')
				showMessage ('failure3', 'Failure')
				--wait (15)
				for i = 4, 7 do
					setPlayerAsWinner(i)
				end
				endGame()
			end

			if lastDeadUnitName() == 'mage_tower' then
				--print (lastDeadUnitName())
				mageTowerCount = mageTowerCount - 1
				if mageTowerCount == 0 then

					showMessage ('victory1', 'Victory')
					showMessage ('victory2', 'Victory')
					showMessage ('victory3', 'Victory')
					showMessage ('victory4', 'Victory')
					showMessage ('victory5', 'Victory')
					--wait (15)

					for i = 0, 3 do
						setPlayerAsWinner(i)
					end
					endGame()
				end
			end

		</unitDied>
	</scripts>
</scenario>
